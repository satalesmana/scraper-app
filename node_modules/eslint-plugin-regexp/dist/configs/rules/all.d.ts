export declare const rules: {
    "no-control-regex": string;
    "no-misleading-character-class": string;
    "no-regex-spaces": string;
    "prefer-regex-literals": string;
    "no-invalid-regexp": string;
    "no-useless-backreference": string;
    "no-empty-character-class": string;
    "regexp/confusing-quantifier": string;
    "regexp/control-character-escape": string;
    "regexp/match-any": string;
    "regexp/negation": string;
    "regexp/no-contradiction-with-assertion": string;
    "regexp/no-dupe-characters-character-class": string;
    "regexp/no-dupe-disjunctions": string;
    "regexp/no-empty-alternative": string;
    "regexp/no-empty-capturing-group": string;
    "regexp/no-empty-character-class": string;
    "regexp/no-empty-group": string;
    "regexp/no-empty-lookarounds-assertion": string;
    "regexp/no-empty-string-literal": string;
    "regexp/no-escape-backspace": string;
    "regexp/no-extra-lookaround-assertions": string;
    "regexp/no-invalid-regexp": string;
    "regexp/no-invisible-character": string;
    "regexp/no-lazy-ends": string;
    "regexp/no-legacy-features": string;
    "regexp/no-misleading-capturing-group": string;
    "regexp/no-misleading-unicode-character": string;
    "regexp/no-missing-g-flag": string;
    "regexp/no-non-standard-flag": string;
    "regexp/no-obscure-range": string;
    "regexp/no-optional-assertion": string;
    "regexp/no-potentially-useless-backreference": string;
    "regexp/no-super-linear-backtracking": string;
    "regexp/no-trivially-nested-assertion": string;
    "regexp/no-trivially-nested-quantifier": string;
    "regexp/no-unused-capturing-group": string;
    "regexp/no-useless-assertions": string;
    "regexp/no-useless-backreference": string;
    "regexp/no-useless-character-class": string;
    "regexp/no-useless-dollar-replacements": string;
    "regexp/no-useless-escape": string;
    "regexp/no-useless-flag": string;
    "regexp/no-useless-lazy": string;
    "regexp/no-useless-non-capturing-group": string;
    "regexp/no-useless-quantifier": string;
    "regexp/no-useless-range": string;
    "regexp/no-useless-set-operand": string;
    "regexp/no-useless-string-literal": string;
    "regexp/no-useless-two-nums-quantifier": string;
    "regexp/no-zero-quantifier": string;
    "regexp/optimal-lookaround-quantifier": string;
    "regexp/optimal-quantifier-concatenation": string;
    "regexp/prefer-character-class": string;
    "regexp/prefer-d": string;
    "regexp/prefer-plus-quantifier": string;
    "regexp/prefer-predefined-assertion": string;
    "regexp/prefer-question-quantifier": string;
    "regexp/prefer-range": string;
    "regexp/prefer-set-operation": string;
    "regexp/prefer-star-quantifier": string;
    "regexp/prefer-unicode-codepoint-escapes": string;
    "regexp/prefer-w": string;
    "regexp/simplify-set-operations": string;
    "regexp/sort-flags": string;
    "regexp/strict": string;
    "regexp/use-ignore-case": string;
};
